FROM centos:centos7
MAINTAINER Emmanuel Chanson <emmanuelchanson@gmail.com>

# Install the Nginx.org CentOS repo.
ADD ./nginx.repo /etc/yum.repos.d/nginx.repo

# Install base stuff.
RUN yum -y install \
    https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    https://rpms.remirepo.net/enterprise/remi-release-7.rpm \
&& rpm --import \
         /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 \
         /etc/pki/rpm-gpg/RPM-GPG-KEY-remi \
         /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 \
# Specify the version of PHP to install
&& yum-config-manager --enable remi,remi-php53 \
# Update existing things, then
&& yum -y update \
# install Nginx
&& yum -y install nginx \
# install supervisord
&& yum install -y supervisor \
# install PHP
&& yum -y install php \
    php-bcmath \
    php-common \
    php-devel \
    php-fpm \
    php-mbstring \
    php-mcrypt \
    php-pdo \
    php-pecl-memcached \
    php-pecl-mysql \
    php-xml \
    php-pdo \
    php-pdo_mysql \
    php-mysqli \
    php-gd \
    php-openssl \
    php-apcu \
    php-gmagick \
    php-xsl \
    php-zip \
    php-sockets \
    php-iconv \
    php-json \
    php-intl \
    php-memcached \
    php-oauth \
    php-imap \
    php-gmp \
# Install PHP Composer
&& curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin \
# Remove the default configuration files.
&& rm /etc/php.ini /etc/php-fpm.conf /etc/php-fpm.d/www.conf

# Add custom NGINX configs:
#RUN sed -i '1i\daemon off;\' /etc/nginx/nginx.conf
COPY ./default.conf /etc/nginx/conf.d/default.conf

# Add custom PHP configs:
COPY ./php.ini /etc/php.ini
COPY ./php-fpm.conf /etc/php-fpm.conf
COPY ./www.conf /etc/php-fpm.d/www.conf

##############
# MARIADB 10.3
###
### Envs
###

# User/Group
ENV MY_USER="mysql"
ENV MY_GROUP="mysql"
ENV MY_UID="48"
ENV MY_GID="48"

# Files
ENV MYSQL_BASE_INCL="/etc/my.cnf.d"
ENV MYSQL_CUST_INCL1="/etc/mysql/conf.d"
ENV MYSQL_CUST_INCL2="/etc/mysql/docker-default.d"
ENV MYSQL_DEF_DAT="/var/lib/mysql"
ENV MYSQL_DEF_LOG="/var/log/mysql"
ENV MYSQL_DEF_PID="/var/run/mysqld"
ENV MYSQL_DEF_SCK="/var/sock/mysqld"

ENV MYSQL_LOG_SLOW="${MYSQL_DEF_LOG}/slow.log"
ENV MYSQL_LOG_ERROR="${MYSQL_DEF_LOG}/error.log"
ENV MYSQL_LOG_QUERY="${MYSQL_DEF_LOG}/query.log"

###
### Install
###
#RUN groupadd -g ${MY_GID} -r ${MY_GROUP} && \
#        adduser ${MY_USER} -u ${MY_UID} -M -s /sbin/nologin -g ${MY_GROUP}

# Install the Nginx.org CentOS repo.
ADD ./mariadb.repo /etc/yum.repos.d/mariadb.repo

RUN yum clean all

RUN yum -y update && yum -y install \
        MariaDB-server

RUN \
        yum -y autoremove && \
        yum clean metadata && \
        yum clean all && \
        yum -y install hostname && \
        yum clean all

##
## Configure
##
RUN \
        rm -rf ${MYSQL_BASE_INCL} && \
        rm -rf ${MYSQL_CUST_INCL1} && \
        rm -rf ${MYSQL_CUST_INCL2} && \
        rm -rf ${MYSQL_DEF_DAT} && \
        rm -rf ${MYSQL_DEF_SCK} && \
        rm -rf ${MYSQL_DEF_PID} && \
        rm -rf ${MYSQL_DEF_LOG} && \
        \
        mkdir -p ${MYSQL_BASE_INCL} && \
        mkdir -p ${MYSQL_CUST_INCL1} && \
        mkdir -p ${MYSQL_CUST_INCL2} && \
        mkdir -p ${MYSQL_DEF_DAT} && \
        mkdir -p ${MYSQL_DEF_SCK} && \
        mkdir -p ${MYSQL_DEF_PID} && \
        mkdir -p ${MYSQL_DEF_LOG} && \
        \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_BASE_INCL} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_CUST_INCL1} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_CUST_INCL2} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_DEF_DAT} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_DEF_SCK} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_DEF_PID} && \
        chown -R ${MY_USER}:${MY_GROUP} ${MYSQL_DEF_LOG} && \
        \
        chmod 0775 ${MYSQL_BASE_INCL} && \
        chmod 0775 ${MYSQL_CUST_INCL1} && \
        chmod 0775 ${MYSQL_CUST_INCL2} && \
        chmod 0775 ${MYSQL_DEF_DAT} && \
        chmod 0775 ${MYSQL_DEF_SCK} && \
        chmod 0775 ${MYSQL_DEF_PID} && \
        chmod 0775 ${MYSQL_DEF_LOG}

RUN \
        echo "[client]"                                         > /etc/my.cnf && \
        echo "socket = ${MYSQL_DEF_SCK}/mysqld.sock"           >> /etc/my.cnf && \
        \
        echo "[mysql]"                                         >> /etc/my.cnf && \
        echo "socket = ${MYSQL_DEF_SCK}/mysqld.sock"           >> /etc/my.cnf && \
        \
        echo "[mysqld]"                                        >> /etc/my.cnf && \
        echo "skip-host-cache"                                 >> /etc/my.cnf && \
        echo "skip-name-resolve"                               >> /etc/my.cnf && \
        echo "datadir = ${MYSQL_DEF_DAT}"                      >> /etc/my.cnf && \
        echo "user = ${MY_USER}"                               >> /etc/my.cnf && \
        echo "port = 3306"                                     >> /etc/my.cnf && \
        echo "bind-address = 0.0.0.0"                          >> /etc/my.cnf && \
        echo "socket = ${MYSQL_DEF_SCK}/mysqld.sock"           >> /etc/my.cnf && \
        echo "pid-file = ${MYSQL_DEF_PID}/mysqld.pid"          >> /etc/my.cnf && \
        echo "general_log_file = ${MYSQL_LOG_QUERY}"           >> /etc/my.cnf && \
        echo "slow_query_log_file = ${MYSQL_LOG_SLOW}"         >> /etc/my.cnf && \
        echo "log-error = ${MYSQL_LOG_ERROR}"                  >> /etc/my.cnf && \
        echo "!includedir ${MYSQL_BASE_INCL}/"                 >> /etc/my.cnf && \
        echo "!includedir ${MYSQL_CUST_INCL1}/"                >> /etc/my.cnf && \
        echo "!includedir ${MYSQL_CUST_INCL2}/"                >> /etc/my.cnf

##
## Bootstrap Scripts
##
COPY ./docker-entrypoint.sh /

##
## Volumes
##
VOLUME /var/lib/mysql
VOLUME /var/log/mysql
VOLUME /var/sock/mysqld
VOLUME /etc/mysql/conf.d
VOLUME etc/mysql/docker-default.d

##############
# Clean up YUM when done.
RUN yum clean all

WORKDIR /opt
#COPY ./start-lemp.sh /opt/
COPY supervisord.conf /etc/supervisord.conf

EXPOSE 80 9000 3306
CMD ["/docker-entrypoint.sh"]

# Exmple command
# docker build -t element/centos-lemp-2 .
# docker run -d -p 3306:3306 -p 80:80 -v /var/www/code/:/var/www/html:ro -e MYSQL_ROOT_PASSWORD=element --name centos-lemp-2 element/centos-lemp:2
